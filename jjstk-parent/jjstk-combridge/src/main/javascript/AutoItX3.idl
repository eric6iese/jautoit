// Generated .IDL file (by the OLE/COM Object Viewer)
// 
// typelib filename: AutoItX3_x64.dll

[
  uuid(F8937E53-D444-4E71-9275-35B64210CC3B),
  version(1.0),
  helpstring("AutoItX3 1.0 Type Library"),
  custom(DE77BA64-517C-11D1-A2DA-0000F8773CE9, 117441067),
  custom(DE77BA63-517C-11D1-A2DA-0000F8773CE9, 1442585045),
  custom(DE77BA65-517C-11D1-A2DA-0000F8773CE9, "Created by MIDL version 7.00.0555 at Fri Sep 18 15:04:04 2015
")

]
library AutoItX3Lib
{
    // TLib :     // TLib : OLE Automation : {00020430-0000-0000-C000-000000000046}
    importlib("stdole2.tlb");

    // Forward declare all types defined in this typelib
    interface IAutoItX3;

    [
      uuid(1A671297-FA74-4422-80FA-6C5D8CE4DE04),
      helpstring("AutoItX3 Class")
    ]
    coclass AutoItX3 {
        [default] interface IAutoItX3;
    };

    [
      odl,
      uuid(3D54C6B8-D283-40E0-8FAB-C97F05947EE8),
      helpstring("IAutoItX3 Interface"),
      dual,
      nonextensible,
      oleautomation
    ]
    interface IAutoItX3 : IDispatch {
        [id(0x00000001), propget, helpstring("property error")]
        HRESULT error([out, retval] long* pVal);
        [id(0x00000002), propget, helpstring("property SW_HIDE")]
        HRESULT SW_HIDE([out, retval] long* pVal);
        [id(0x00000003), propget, helpstring("property SW_MAXIMIZE")]
        HRESULT SW_MAXIMIZE([out, retval] long* pVal);
        [id(0x00000004), propget, helpstring("property SW_MINIMIZE")]
        HRESULT SW_MINIMIZE([out, retval] long* pVal);
        [id(0x00000005), propget, helpstring("property SW_RESTORE")]
        HRESULT SW_RESTORE([out, retval] long* pVal);
        [id(0x00000006), propget, helpstring("property SW_SHOW")]
        HRESULT SW_SHOW([out, retval] long* pVal);
        [id(0x00000007), propget, helpstring("property SW_SHOWDEFAULT")]
        HRESULT SW_SHOWDEFAULT([out, retval] long* pVal);
        [id(0x00000008), propget, helpstring("property SW_SHOWMAXIMIZED")]
        HRESULT SW_SHOWMAXIMIZED([out, retval] long* pVal);
        [id(0x00000009), propget, helpstring("property SW_SHOWMINIMIZED")]
        HRESULT SW_SHOWMINIMIZED([out, retval] long* pVal);
        [id(0x0000000a), propget, helpstring("property SW_SHOWMINNOACTIVE")]
        HRESULT SW_SHOWMINNOACTIVE([out, retval] long* pVal);
        [id(0x0000000b), propget, helpstring("property SW_SHOWNA")]
        HRESULT SW_SHOWNA([out, retval] long* pVal);
        [id(0x0000000c), propget, helpstring("property SW_SHOWNOACTIVATE")]
        HRESULT SW_SHOWNOACTIVATE([out, retval] long* pVal);
        [id(0x0000000d), propget, helpstring("property SW_SHOWNORMAL")]
        HRESULT SW_SHOWNORMAL([out, retval] long* pVal);
        [id(0x0000000e), helpstring("method Init")]
        HRESULT Init();
        [id(0x0000000f), helpstring("method AutoItSetOption")]
        HRESULT AutoItSetOption(
                        [in] BSTR strOption, 
                        [in] long nValue, 
                        [out, retval] long* nRes);
        [id(0x00000012), helpstring("method ClipGet")]
        HRESULT ClipGet([out, retval] BSTR* strClip);
        [id(0x00000013), helpstring("method ClipPut")]
        HRESULT ClipPut([in] BSTR strClip);
        [id(0x00000014), helpstring("method ControlClick")]
        HRESULT ControlClick(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strControl, 
                        [in, optional, defaultvalue("LEFT")] BSTR strButton, 
                        [in, optional, defaultvalue(1)] long nNumClicks, 
                        [in, optional, defaultvalue(-2147483647)] long nX, 
                        [in, optional, defaultvalue(-2147483647)] long nY, 
                        [out, retval] long* nRes);
        [id(0x00000015), helpstring("method ControlCommand")]
        HRESULT ControlCommand(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strControl, 
                        [in] BSTR strCommand, 
                        [in] BSTR strExtra, 
                        [out, retval] BSTR* strResult);
        [id(0x00000016), helpstring("method ControlDisable")]
        HRESULT ControlDisable(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strControl, 
                        [out, retval] long* nRes);
        [id(0x00000017), helpstring("method ControlEnable")]
        HRESULT ControlEnable(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strControl, 
                        [out, retval] long* nRes);
        [id(0x00000018), helpstring("method ControlFocus")]
        HRESULT ControlFocus(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strControl, 
                        [out, retval] long* nRes);
        [id(0x00000019), helpstring("method ControlGetFocus")]
        HRESULT ControlGetFocus(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [out, retval] BSTR* strControlWithFocus);
        [id(0x0000001a), helpstring("method ControlGetHandle")]
        HRESULT ControlGetHandle(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strControl, 
                        [out, retval] BSTR* strRetText);
        [id(0x0000001b), helpstring("method ControlGetPosX")]
        HRESULT ControlGetPosX(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strControl, 
                        [out, retval] long* nRes);
        [id(0x0000001c), helpstring("method ControlGetPosY")]
        HRESULT ControlGetPosY(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strControl, 
                        [out, retval] long* nRes);
        [id(0x0000001d), helpstring("method ControlGetPosHeight")]
        HRESULT ControlGetPosHeight(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strControl, 
                        [out, retval] long* nRes);
        [id(0x0000001e), helpstring("method ControlGetPosWidth")]
        HRESULT ControlGetPosWidth(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strControl, 
                        [out, retval] long* nRes);
        [id(0x0000001f), helpstring("method ControlGetText")]
        HRESULT ControlGetText(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strControl, 
                        [out, retval] BSTR* strControlText);
        [id(0x00000020), helpstring("method ControlHide")]
        HRESULT ControlHide(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strControl, 
                        [out, retval] long* nRes);
        [id(0x00000021), helpstring("method ControlListView")]
        HRESULT ControlListView(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strControl, 
                        [in] BSTR strCommand, 
                        [in] BSTR strExtra1, 
                        [in] BSTR strExtra2, 
                        [out, retval] BSTR* strResult);
        [id(0x00000022), helpstring("method ControlMove")]
        HRESULT ControlMove(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strControl, 
                        [in] long nX, 
                        [in] long nY, 
                        [in, optional, defaultvalue(-1)] long nWidth, 
                        [in, optional, defaultvalue(-1)] long nHeight, 
                        [out, retval] long* nRes);
        [id(0x00000023), helpstring("method ControlSend")]
        HRESULT ControlSend(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strControl, 
                        [in] BSTR strSendText, 
                        [in, optional, defaultvalue(0)] long nMode, 
                        [out, retval] long* nRes);
        [id(0x00000024), helpstring("method ControlSetText")]
        HRESULT ControlSetText(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strControl, 
                        [in] BSTR strControlText, 
                        [out, retval] long* nRes);
        [id(0x00000025), helpstring("method ControlShow")]
        HRESULT ControlShow(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strControl, 
                        [out, retval] long* nRes);
        [id(0x00000026), helpstring("method ControlTreeView")]
        HRESULT ControlTreeView(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strControl, 
                        [in] BSTR strCommand, 
                        [in] BSTR strExtra1, 
                        [in] BSTR strExtra2, 
                        [out, retval] BSTR* strResult);
        [id(0x00000027), helpstring("method DriveMapAdd")]
        HRESULT DriveMapAdd(
                        [in] BSTR strDevice, 
                        [in] BSTR strShare, 
                        [in, optional, defaultvalue(0)] long nFlags, 
                        [in, optional, defaultvalue("")] BSTR strUser, 
                        [in, optional, defaultvalue("")] BSTR strPwd, 
                        [out, retval] BSTR* strResult);
        [id(0x00000028), helpstring("method DriveMapDel")]
        HRESULT DriveMapDel(
                        [in] BSTR strDevice, 
                        [out, retval] long* nRes);
        [id(0x00000029), helpstring("method DriveMapGet")]
        HRESULT DriveMapGet(
                        [in] BSTR strDevice, 
                        [out, retval] BSTR* strMapping);
        [id(0x0000002d), helpstring("method IsAdmin")]
        HRESULT IsAdmin([out, retval] long* nRes);
        [id(0x0000002e), helpstring("method MouseClick")]
        HRESULT MouseClick(
                        [in, optional, defaultvalue("LEFT")] BSTR strButton, 
                        [in, optional, defaultvalue(-2147483647)] long nX, 
                        [in, optional, defaultvalue(-2147483647)] long nY, 
                        [in, optional, defaultvalue(1)] long nClicks, 
                        [in, optional, defaultvalue(-1)] long nSpeed, 
                        [out, retval] long* nRes);
        [id(0x0000002f), helpstring("method MouseClickDrag")]
        HRESULT MouseClickDrag(
                        [in] BSTR strButton, 
                        [in] long nX1, 
                        [in] long nY1, 
                        [in] long nX2, 
                        [in] long nY2, 
                        [in, optional, defaultvalue(-1)] long nSpeed, 
                        [out, retval] long* nRes);
        [id(0x00000030), helpstring("method MouseDown")]
        HRESULT MouseDown([in, optional, defaultvalue("LEFT")] BSTR strButton);
        [id(0x00000031), helpstring("method MouseGetCursor")]
        HRESULT MouseGetCursor([out, retval] long* nRes);
        [id(0x00000032), helpstring("method MouseGetPosX")]
        HRESULT MouseGetPosX([out, retval] long* nRes);
        [id(0x00000033), helpstring("method MouseGetPosY")]
        HRESULT MouseGetPosY([out, retval] long* nRes);
        [id(0x00000034), helpstring("method MouseMove")]
        HRESULT MouseMove(
                        [in] long nX, 
                        [in] long nY, 
                        [in, optional, defaultvalue(-1)] long nSpeed, 
                        [out, retval] long* nRes);
        [id(0x00000035), helpstring("method MouseUp")]
        HRESULT MouseUp([in, optional, defaultvalue("LEFT")] BSTR strButton);
        [id(0x00000036), helpstring("method MouseWheel")]
        HRESULT MouseWheel(
                        [in] BSTR strDirection, 
                        [in, optional, defaultvalue(1)] long nClicks);
        [id(0x00000037), helpstring("method Opt")]
        HRESULT Opt(
                        [in] BSTR strOption, 
                        [in] long nValue, 
                        [out, retval] long* nRes);
        [id(0x00000038), helpstring("method PixelChecksum")]
        HRESULT PixelChecksum(
                        [in] long nLeft, 
                        [in] long nTop, 
                        [in] long nRight, 
                        [in] long nBottom, 
                        [in, optional, defaultvalue(1)] long nStep, 
                        [out, retval] double* nRes);
        [id(0x00000039), helpstring("method PixelGetColor")]
        HRESULT PixelGetColor(
                        [in] long nX, 
                        [in] long nY, 
                        [out, retval] long* nRes);
        [id(0x0000003a), helpstring("method PixelSearch")]
        HRESULT PixelSearch(
                        [in] long nLeft, 
                        [in] long nTop, 
                        [in] long nRight, 
                        [in] long nBottom, 
                        [in] long nCol, 
                        [in, optional, defaultvalue(0)] long nVar, 
                        [in, optional, defaultvalue(1)] long nStep, 
                        [out, retval] VARIANT* vOutResult);
        [id(0x0000003b), helpstring("method ProcessClose")]
        HRESULT ProcessClose(
                        [in] BSTR strProcess, 
                        [out, retval] long* nRes);
        [id(0x0000003c), helpstring("method ProcessExists")]
        HRESULT ProcessExists(
                        [in] BSTR strProcess, 
                        [out, retval] long* nRes);
        [id(0x0000003d), helpstring("method ProcessSetPriority")]
        HRESULT ProcessSetPriority(
                        [in] BSTR strProcess, 
                        [in] long nPriority, 
                        [out, retval] long* nRes);
        [id(0x0000003e), helpstring("method ProcessWait")]
        HRESULT ProcessWait(
                        [in] BSTR strProcess, 
                        [in, optional, defaultvalue(0)] long nTimeout, 
                        [out, retval] long* nRes);
        [id(0x0000003f), helpstring("method ProcessWaitClose")]
        HRESULT ProcessWaitClose(
                        [in] BSTR strProcess, 
                        [in, optional, defaultvalue(0)] long nTimeout, 
                        [out, retval] long* nRes);
        [id(0x00000046), helpstring("method Run")]
        HRESULT Run(
                        [in] BSTR strRun, 
                        [in, optional, defaultvalue("")] BSTR strDir, 
                        [in, optional, defaultvalue(13)] long nShowFlag, 
                        [out, retval] long* nRes);
        [id(0x00000047), helpstring("method RunAs")]
        HRESULT RunAs(
                        [in] BSTR strUser, 
                        [in] BSTR strDomain, 
                        [in] BSTR strPassword, 
                        [in] long nLogonFlag, 
                        [in] BSTR strRun, 
                        [in, optional, defaultvalue("")] BSTR strDir, 
                        [in, optional, defaultvalue(13)] long nShowFlag, 
                        [out, retval] long* nRes);
        [id(0x00000040), helpstring("method RunAsWait")]
        HRESULT RunAsWait(
                        [in] BSTR strUser, 
                        [in] BSTR strDomain, 
                        [in] BSTR strPassword, 
                        [in] long nLogonFlag, 
                        [in] BSTR strRun, 
                        [in, optional, defaultvalue("")] BSTR strDir, 
                        [in, optional, defaultvalue(13)] long nShowFlag, 
                        [out, retval] long* nRes);
        [id(0x00000048), helpstring("method RunWait")]
        HRESULT RunWait(
                        [in] BSTR strRun, 
                        [in, optional, defaultvalue("")] BSTR strDir, 
                        [in, optional, defaultvalue(13)] long nShowFlag, 
                        [out, retval] long* nRes);
        [id(0x00000049), helpstring("method Send")]
        HRESULT Send(
                        [in] BSTR strSendText, 
                        [in, optional, defaultvalue(0)] long nMode);
        [id(0x0000004a), helpstring("method Shutdown")]
        HRESULT Shutdown(
                        [in] long nFlags, 
                        [out, retval] long* nRes);
        [id(0x0000004b), helpstring("method Sleep")]
        HRESULT Sleep([in] long nMilliseconds);
        [id(0x0000004c), helpstring("method StatusbarGetText")]
        HRESULT StatusbarGetText(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [in, optional, defaultvalue(1)] long nPart, 
                        [out, retval] BSTR* strStatusText);
        [id(0x0000004d), helpstring("method ToolTip")]
        HRESULT ToolTip(
                        [in] BSTR strTip, 
                        [in, optional, defaultvalue(-2147483647)] long nX, 
                        [in, optional, defaultvalue(-2147483647)] long nY);
        [id(0x0000004e), helpstring("method WinActivate")]
        HRESULT WinActivate(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText);
        [id(0x0000004f), helpstring("method WinActive")]
        HRESULT WinActive(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [out, retval] long* nRes);
        [id(0x00000050), helpstring("method WinClose")]
        HRESULT WinClose(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [out, retval] long* nRes);
        [id(0x00000051), helpstring("method WinExists")]
        HRESULT WinExists(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [out, retval] long* nRes);
        [id(0x00000052), helpstring("method WinGetCaretPosX")]
        HRESULT WinGetCaretPosX([out, retval] long* nRes);
        [id(0x00000053), helpstring("method WinGetCaretPosY")]
        HRESULT WinGetCaretPosY([out, retval] long* nRes);
        [id(0x00000054), helpstring("method WinGetClassList")]
        HRESULT WinGetClassList(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [out, retval] BSTR* strRetText);
        [id(0x00000055), helpstring("method WinGetClientSizeHeight")]
        HRESULT WinGetClientSizeHeight(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [out, retval] long* nRes);
        [id(0x00000056), helpstring("method WinGetClientSizeWidth")]
        HRESULT WinGetClientSizeWidth(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [out, retval] long* nRes);
        [id(0x00000057), helpstring("method WinGetHandle")]
        HRESULT WinGetHandle(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [out, retval] BSTR* strRetText);
        [id(0x00000058), helpstring("method WinGetPosX")]
        HRESULT WinGetPosX(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [out, retval] long* nRes);
        [id(0x00000059), helpstring("method WinGetPosY")]
        HRESULT WinGetPosY(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [out, retval] long* nRes);
        [id(0x0000005a), helpstring("method WinGetPosHeight")]
        HRESULT WinGetPosHeight(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [out, retval] long* nRes);
        [id(0x0000005b), helpstring("method WinGetPosWidth")]
        HRESULT WinGetPosWidth(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [out, retval] long* nRes);
        [id(0x0000005c), helpstring("method WinGetProcess")]
        HRESULT WinGetProcess(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [out, retval] BSTR* strResult);
        [id(0x0000005d), helpstring("method WinGetState")]
        HRESULT WinGetState(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [out, retval] long* nRes);
        [id(0x0000005e), helpstring("method WinGetText")]
        HRESULT WinGetText(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [out, retval] BSTR* strRetText);
        [id(0x0000005f), helpstring("method WinGetTitle")]
        HRESULT WinGetTitle(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [out, retval] BSTR* strRetText);
        [id(0x00000060), helpstring("method WinKill")]
        HRESULT WinKill(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [out, retval] long* nRes);
        [id(0x00000061), helpstring("method WinList")]
        HRESULT WinList(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [out, retval] VARIANT* vOutResult);
        [id(0x00000062), helpstring("method WinMenuSelectItem")]
        HRESULT WinMenuSelectItem(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strItem1, 
                        [in, optional, defaultvalue("")] BSTR strItem2, 
                        [in, optional, defaultvalue("")] BSTR strItem3, 
                        [in, optional, defaultvalue("")] BSTR strItem4, 
                        [in, optional, defaultvalue("")] BSTR strItem5, 
                        [in, optional, defaultvalue("")] BSTR strItem6, 
                        [in, optional, defaultvalue("")] BSTR strItem7, 
                        [in, optional, defaultvalue("")] BSTR strItem8, 
                        [out, retval] long* nRes);
        [id(0x00000063), helpstring("method WinMinimizeAll")]
        HRESULT WinMinimizeAll();
        [id(0x00000064), helpstring("method WinMinimizeAllUndo")]
        HRESULT WinMinimizeAllUndo();
        [id(0x00000065), helpstring("method WinMove")]
        HRESULT WinMove(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] long nX, 
                        [in] long nY, 
                        [in, optional, defaultvalue(-1)] long nWidth, 
                        [in, optional, defaultvalue(-1)] long nHeight, 
                        [out, retval] long* nRes);
        [id(0x00000066), helpstring("method WinSetOnTop")]
        HRESULT WinSetOnTop(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] long nFlag, 
                        [out, retval] long* nRes);
        [id(0x00000067), helpstring("method WinSetState")]
        HRESULT WinSetState(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] long nFlags, 
                        [out, retval] long* nRes);
        [id(0x00000068), helpstring("method WinSetTitle")]
        HRESULT WinSetTitle(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] BSTR strNewTitle, 
                        [out, retval] long* nRes);
        [id(0x00000069), helpstring("method WinSetTrans")]
        HRESULT WinSetTrans(
                        [in] BSTR strTitle, 
                        [in] BSTR strText, 
                        [in] long nTrans, 
                        [out, retval] long* nRes);
        [id(0x0000006a), helpstring("method WinWait")]
        HRESULT WinWait(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [in, optional, defaultvalue(0)] long nTimeout, 
                        [out, retval] long* nRes);
        [id(0x0000006b), helpstring("method WinWaitActive")]
        HRESULT WinWaitActive(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [in, optional, defaultvalue(0)] long nTimeout, 
                        [out, retval] long* nRes);
        [id(0x0000006c), helpstring("method WinWaitClose")]
        HRESULT WinWaitClose(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [in, optional, defaultvalue(0)] long nTimeout, 
                        [out, retval] long* nRes);
        [id(0x0000006d), helpstring("method WinWaitNotActive")]
        HRESULT WinWaitNotActive(
                        [in] BSTR strTitle, 
                        [in, optional, defaultvalue("")] BSTR strText, 
                        [in, optional, defaultvalue(0)] long nTimeout, 
                        [out, retval] long* nRes);
        [id(0x0000006e), propget, helpstring("property version")]
        HRESULT version([out, retval] BSTR* strRetVer);
    };
};